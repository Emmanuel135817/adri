name: Promote to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.1)'
        required: true
        type: string
      release_notes:
        description: 'Release notes (optional)'
        required: false
        type: string

jobs:
  promote:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Update version in pyproject.toml
      run: |
        sed -i 's/version = "[^"]*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml
        git add pyproject.toml
        git commit -m "Bump version to ${{ github.event.inputs.version }}"
    
    - name: Create release tag
      run: |
        git tag "v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
    
    - name: Merge main to production
      run: |
        git checkout production
        git merge main --no-ff -m "Release v${{ github.event.inputs.version }}: Merge main to production"
        git push origin production
    
    - name: Update CHANGELOG and Version Tracking
      run: |
        git checkout main
        DATE=$(date +%Y-%m-%d)
        if [ ! -f CHANGELOG.md ]; then
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
        fi
        
        # Create temporary file with new entry
        echo "" > temp_changelog.md
        echo "## [${{ github.event.inputs.version }}] - $DATE" >> temp_changelog.md
        echo "" >> temp_changelog.md
        echo "${{ github.event.inputs.release_notes }}" >> temp_changelog.md
        echo "" >> temp_changelog.md
        
        # Combine with existing changelog
        if [ -f CHANGELOG.md ]; then
          tail -n +2 CHANGELOG.md >> temp_changelog.md
        fi
        
        # Replace original with updated version
        echo "# Changelog" > CHANGELOG.md
        cat temp_changelog.md >> CHANGELOG.md
        rm temp_changelog.md
        
        # Update version tracking files for cross-repository coordination
        python scripts/update_version_tracking.py \
          --validator-repo . \
          --standards-repo ../adri-standards \
          --release-type "Beta" \
          --description \
            "Production-ready CI/CD pipeline" \
            "91% test coverage with comprehensive test suite" \
            "@adri_protected decorator with variants" \
            "Complete CLI workflow (setup, assess, generate)" \
            "Data quality assessment engine" \
            "Configuration management system" \
            "Analysis tools (profiler, generator)" \
            "Full integration with adri-standards"
        
        git add CHANGELOG.md ../adri-standards/ADRI_VALIDATOR_RELEASES.json ../adri-standards/ADRI-Validator-Releases.md
        git commit -m "Update CHANGELOG and version tracking for v${{ github.event.inputs.version }}"
        git push origin main
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ github.event.inputs.version }}"
        name: "Release v${{ github.event.inputs.version }}"
        body: |
          ${{ github.event.inputs.release_notes }}
          
          ## What's Changed
          See the [CHANGELOG](https://github.com/ThinkEvolveSolve/adri-validator/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Installation
          ```bash
          pip install adri==${{ github.event.inputs.version }}
          ```
        draft: false
        prerelease: ${{ contains(github.event.inputs.version, 'rc') || contains(github.event.inputs.version, 'beta') || contains(github.event.inputs.version, 'alpha') }}
