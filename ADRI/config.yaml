# ADRI Configuration File
# =====================
# This file controls ADRI's behavior across different environments
# and defines where data quality assets are stored and managed.

adri:
  project_name: adri
  version: 4.0.0

  # ENVIRONMENT SWITCHING
  # ====================
  # Controls which environment ADRI uses by default. Change this value to switch
  # between development and production environments:
  # - 'development': Use for testing, experimentation, and standard creation
  # - 'production': Use for validated standards and production data assessments
  default_environment: development

  # ENVIRONMENT CONFIGURATIONS
  # =========================
  # ADRI supports multiple isolated environments to separate development work
  # from production deployments. Each environment maintains its own:
  # - Standards (YAML validation rules)
  # - Assessments (Quality reports and results)
  # - Training data (Data snapshots for lineage tracking)
  # - Audit logs (Comprehensive activity logs)

  environments:

    # DEVELOPMENT ENVIRONMENT
    # ======================
    # Purpose: Standard creation, testing, and experimentation
    # Use cases:
    #   - Creating new data quality standards from sample data
    #   - Testing standards against various datasets
    #   - Iterating on quality rules and thresholds
    #   - Learning ADRI workflows with tutorial data
    development:
      paths:
        # Where YAML standard files are stored (quality validation rules)
        standards: ADRI/dev/standards

        # Where assessment reports are saved (JSON quality reports)
        assessments: ADRI/dev/assessments

        # Where training data snapshots are preserved (SHA256 integrity tracking)
        training_data: ADRI/dev/training-data

        # Where comprehensive audit logs are stored (CSV activity tracking)
        audit_logs: ADRI/dev/audit-logs

      # AUDIT CONFIGURATION
      # Comprehensive logging for development debugging and workflow tracking
      audit:
        enabled: true                    # Enable audit logging
        log_dir: ADRI/dev/audit-logs     # Directory for audit files
        log_prefix: adri                 # Prefix for log files
        log_level: INFO                  # Log detail level (DEBUG, INFO, WARN, ERROR)
        include_data_samples: true       # Include data samples in audit logs
        max_log_size_mb: 100            # Maximum size per log file in MB

    # PRODUCTION ENVIRONMENT
    # =====================
    # Purpose: Validated standards and production data quality assessments
    # Use cases:
    #   - Deploying proven standards from development
    #   - Running production data quality assessments
    #   - Enterprise governance and compliance reporting
    #   - Integration with CI/CD pipelines and monitoring systems
    production:
      paths:
        # Production-validated YAML standards (copied from dev after testing)
        standards: ADRI/prod/standards

        # Production assessment reports (business-critical quality reports)
        assessments: ADRI/prod/assessments

        # Production training data lineage (regulatory compliance tracking)
        training_data: ADRI/prod/training-data

        # Production audit trail (compliance and security logging)
        audit_logs: ADRI/prod/audit-logs

      # PRODUCTION AUDIT CONFIGURATION
      # Enhanced logging for compliance, security, and operational monitoring
      audit:
        enabled: true                    # Critical for production compliance
        log_dir: ADRI/prod/audit-logs    # Production audit directory
        log_prefix: adri                 # Consistent naming with development
        log_level: INFO                  # Balanced detail for production monitoring
        include_data_samples: true       # Required for regulatory compliance
        max_log_size_mb: 100            # Production log rotation threshold

# SWITCHING ENVIRONMENTS
# =====================
# To switch between environments:
#
# 1. Configuration Method (Recommended):
#    Edit this file and change 'default_environment' from 'development' to 'production'
#
# 2. Environment Variable Method:
#    Set ADRI_ENV environment variable: export ADRI_ENV=production
#
# 3. Command Line Method (if supported):
#    Use --environment flag: adri assess data.csv --standard prod/standards/my_standard.yaml
#
# WORKFLOW RECOMMENDATIONS
# =======================
# Development → Production Workflow:
# 1. Create and test standards in development environment
# 2. Validate standards with various test datasets
# 3. Copy proven standards from dev/standards/ to prod/standards/
# 4. Switch to production environment for business-critical assessments
# 5. Monitor production audit logs for compliance and performance
#
# Directory Structure Created:
# ADRI/
# ├── config.yaml                 # This configuration file
# ├── tutorials/                  # Learning examples and sample data
# ├── dev/                        # Development environment
# │   ├── standards/              # Development YAML standards
# │   ├── assessments/            # Development quality reports
# │   ├── training-data/          # Development data snapshots
# │   └── audit-logs/             # Development activity logs
# └── prod/                       # Production environment
#     ├── standards/              # Production YAML standards
#     ├── assessments/            # Production quality reports
#     ├── training-data/          # Production data snapshots
#     └── audit-logs/             # Production activity logs
